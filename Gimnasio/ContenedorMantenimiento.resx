<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAA2dJREFUWEfVV12ITVEU3uvmv8h/4cWDKb+FSUwp4wlRnsaDotFIKCMzNeVpKBp/
        Kbwhf/OmxgPeJoWmpEQyJcoDigcyZuZBzRh8a6+1993nnH3OuNOM8tV3713r+9be6/ztfa6JYIcx9AYc
        AJ8gXitpj+nI3wT7wW/geeQmiuSxFflX4CD4HPFGSQ+PTSgYIlP67Yi4D/mFIjPoQair54qKjBrEgyn9
        B/LLRS4E3QsLgwGOq2FZjo4jNVPFQu05nouiF4K6coovqGF9TGdCmy8WuhvX6ZboxWiNF5ttIpspGOhL
        Vqdu1RmNaV08ZpfIxZiMwTrLhfQLsTt6h83I9ZUHps/IrRLJYjxyd8pjlHiMG8iTyH+HWnAPuMJGWcwB
        d4J1oF77DNaBPMYaGxUAR232o8G2JP1pZ6xE7ljWk6ZpBRfbCsHuiGcvOM6qArofnC5PCAdFt5MPxDwx
        wou1wcySUjqX4zkrukXymS2bzD7RTXNMLyJqtksptcV1ei06EDMwIbkGWmJ6EVHD9waQ28A70YGYgQnp
        v27gCMj3zuW4PsYNDMd/cAbsLtgLJja2QB/9BnTCU/Dzquie80ngBuSvg/5pw+/RbQCjPIZPN6NcrOaJ
        1d+DeKak0Xl6QDH5Bg7EdEednI80htnQO/C9QEL+pg9a53fHZgQ/swP7BrCqUXdaFw+f9twj58lfqu8t
        YtdErW5yQ/i9RFLGzEXiY3Jw0yiSRQk8HOrisdc8Bj954A2akB0X32cktpDrExQ8RRL7v0ddqIuHn/UM
        MpMH/kNiMQ0S0zONGckG1PAJAnY0i0QD0Pg1LNzVGAWTl3indKiWnL2EDtkG1OROc7qBsFhBp0NP2ZuY
        nFElmj0Ih4ob4JsovPsXgfw21JH0ZSZn1OgYXzVmVNaAaLzIONALfPBbkG8iZ3JGk+j0SGPGSBqga6oB
        vLrRd/zQJvgPTh7c42mOSmwxogb4GuoLKV0Cb4NXEUyTXBT1Wst/VuZJyqLyBlTndX24ZdgBZ4f6te6k
        5hxG1gATnvfQ+U26CPXB5F2IJ0jagx6CfB1TNC2imy1xnXqkEbu8dsLXAFaDVSD+J5om5P3agN88+Qxw
        1IBdjdrB6N7vCB3XnE7AzzfomGApJsDazssr77D2pQTPuX3U+G4PbziFMX8ArxA/gWdVCLkAAAAASUVO
        RK5CYII=
</value>
  </data>
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAATr2AAE69gE6sVc6AAABFUlE
        QVRYR+2WwQkCMRBFtwTRmwcFD9bk0YMoVuBB7ULEDqxCxE7UuxUo6P8wAyFmN44RXSQfHkwymclfBjRF
        Vlad1AILsAFrgfESMGeVud8AXMHdg3vMWWXuNwV66CLomjmrzP3cgplQWRCRuZ9bMBJ0fQAroLOMwbOs
        KetnNpBKsgF/hoyP4CQw9vPuOtmAP8M5aIOOwJh7ZefNBvaCrl9pUPUBfr+gAbfAZwisBlijax/mn9QH
        dHkGOlvGO9ADE6ANYgZ4ljVl/XhXUE3QBTpbxg1AuRfEDGi+qp9Z7xj4qNwLtmAse4Qx975mIMb/G/j5
        CEIXxPLJygb4jLoJoSdVLJ8s/qrxkcl/Pca+YvmsrDqqKB6NagCE5hQA1wAAAABJRU5ErkJggg==
</value>
  </data>
</root>